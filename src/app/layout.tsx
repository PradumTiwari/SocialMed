import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { ThemeProvider } from "@/components/ThemeProvider";
import { ClerkProvider, SignInButton, SignUpButton, SignedIn, SignedOut, UserButton } from "@clerk/nextjs";
import { IoMdHome } from "react-icons/io";
import { GoTerminal } from "react-icons/go";
import { FaUser } from "react-icons/fa";
import { useTheme } from "next-themes";
import { Button } from "@/components/ui/button";
import { ModeToggle } from "@/components/ModeToggle";
import { FloatingDock } from "@/components/ui/FloatingDock";
import { currentUser } from "@clerk/nextjs/server";
import { syncUser } from "@/actions/user.action";
import SideBar from "@/components/SideBar";
import {Toaster} from "react-hot-toast";
import { AiFillMessage } from "react-icons/ai";
import { MobileFloatingDock } from "@/components/ui/MobileFloatingDock";
const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Social Media App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  const user = await currentUser();

 if(user) await syncUser();
 


  return (
   
    <ClerkProvider>
      <html lang="en">
        <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <ThemeProvider attribute="class" defaultTheme="system" enableSystem disableTransitionOnChange>
          {/* Top bar with Sign In/Sign Up & ModeToggle */}
          <div className="flex justify-end items-center p-4 gap-4">
            <ModeToggle />
            <SignedOut>
              <SignInButton mode="modal">
                <Button className="text-lg px-4 py-2">Sign In</Button>
              </SignInButton>
              <SignUpButton mode="modal">
                <Button variant="outline" className="text-lg px-4 py-2">Sign Up</Button>
              </SignUpButton>
            </SignedOut>
            <SignedIn>
              <UserButton />
            </SignedIn>
          </div>

          {/* FloatingDock (Fixed Center) */}
 {/* FloatingDock - Responsive */}
<div className="fixed top-16 left-1/2 transform -translate-x-1/2 z-50">
  {/* Large screen: horizontal */}
  <div className="hidden sm:flex gap-x-8 p-4 bg-background rounded-xl shadow-lg">
    <FloatingDock
      className="flex gap-x-8"
      items={[
        { title: "Home", icon: <IoMdHome />, href: "/" },
        ...(user
          ? [
              { title: "Notifications", icon: <GoTerminal />, href: "/notifications" },
              { title: "About", icon: <FaUser />, href: `/profile` },
              { title: "Message", icon: <AiFillMessage />, href: `/message` },
            ]
          : []),
      ]}
    />
  </div>

  {/* Small screen: vertical expandable */}
  <div className="sm:hidden group relative">
   <button className="bg-primary text-white p-3 rounded-full shadow-lg" aria-label="Open menu">
  â˜°
</button>
    <div className="absolute top-14 right-0 w-48 bg-background p-3 rounded-lg shadow-lg hidden group-hover:block transition-all duration-200 space-y-2">
      {[
        { title: "Home", icon: <IoMdHome />, href: "/" },
        ...(user
          ? [
              { title: "Notifications", icon: <GoTerminal />, href: "/notifications" },
              { title: "About", icon: <FaUser />, href: `/profile` },
              { title: "Message", icon: <AiFillMessage />, href: `/message` },
            ]
          : []),
      ].map((item) => (
        <a
          key={item.href}
          href={item.href}
          className="flex items-center gap-3 p-2 hover:bg-muted rounded-md"
        >
          <span className="text-xl">{item.icon}</span>
          <span className="text-sm">{item.title}</span>
        </a>
      ))}
    </div>
  </div>
</div>

          {/* Main Layout with Sidebar (3:9 Ratio) */}
          <div className="pt-28">
           
              <div className="min-h-screen">
                <main className="py-8">
                  <div className="max-w-7xl mx-auto px-4">
                    <div className="grid grid-cols-12 gap-6">
                      {/* Sidebar (3/12 - 25%) */}
                      <div className="hidden lg:block lg:col-span-3 p-4">
                        <SideBar/>
                      </div>

                      {/* Main Content (9/12 - 75%) */}
                      <div className=" col-span-12 lg:col-span-9">{children}</div>
                    </div>
                  </div>
                </main>
              </div>
              <Toaster/>
            
          </div>
          </ThemeProvider>
        </body>
      </html>
      
    </ClerkProvider>
    
  );
}
